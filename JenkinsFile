pipeline {
    agent any

    environment {
        APP_NAME = "java-app"
        IMAGE_TAG = "${APP_NAME}:${GIT_COMMIT}"
        SONAR_SCANNER_HOME = tool 'SonarScanner' // Ensure this tool name matches your Jenkins config
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Java App') {
            steps {
                dir('spring-boot-app') {
                    sh 'mvn clean install'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('spring-boot-app') {
                    withSonarQubeEnv('SonarQube') {
                        sh "${SONAR_SCANNER_HOME}/bin/sonar-scanner"
                    }
                }
            }
        }

        stage('Wait for Quality Gate') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('spring-boot-app') {
                    sh 'docker build -t $IMAGE_TAG .'
                }
            }
        }

        stage('Run Docker Container (locally on EC2)') {
            steps {
                sh '''
                docker rm -f $APP_NAME || true
                docker run -d --name $APP_NAME -p 8070:8090 $IMAGE_TAG
                '''
            }
        }
    }
}
