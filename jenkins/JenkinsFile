pipeline {
    agent any

    tools {
        maven 'Maven 3'        // Must be configured in Jenkins
        jdk 'JDK 17'           // Must match your app's version
    }

    environment {
        DOCKER_IMAGE = "smithacn/myapp:${GIT_COMMIT}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Unit Test') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn sonar:sonar -Dsonar.projectKey=ultimate-pipeline'
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials-id') {
                        sh 'docker build -t $DOCKER_IMAGE .'
                        sh 'docker push $DOCKER_IMAGE'
                    }
                }
            }
        }

        stage('Update GitOps Repo') {
            steps {
                dir('manifests') {
                    sh '''
                      sed -i "s|image: .*|image: $DOCKER_IMAGE|g" deployment.yaml
                      git config user.email "smithamalthi@gmail.com"
                      git config user.name "Smitha-CN"
                      git add deployment.yaml
                      git commit -m "Update image to $DOCKER_IMAGE"
                      git push origin main
                    '''
                }
            }
        }
    }
}
